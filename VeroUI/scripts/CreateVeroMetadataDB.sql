CREATE TABLE DATASOURCES (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100),
    DATABASE_VENDOR        VARCHAR(200),
    DATABASE_VERSION       VARCHAR(100),
    HOST_ADDRESS           VARCHAR(200),
    PORT                   INT,
    USER_NAME              VARCHAR(100),
    PASSWORD               VARCHAR(100),
    AUTH_MODE              VARCHAR(100),
    PRE_EXEC_COMMANDS      VARCHAR(500),
    POST_EXEC_COMMANDS     VARCHAR(500),
    DATABASE_NAME          VARCHAR(200)
);

CREATE TABLE TABLES (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100),
    DESCRIPTION            VARCHAR(500),
    PHYSICAL_NAME          VARCHAR(100),
    TABLE_PREFIX           VARCHAR(100),
    ROW_COUNT              INT,
    TABLE_TYPE             INT,
    DATASOURCE_ID          INT NOT NULL REFERENCES DATASOURCES(ID)
);

CREATE TABLE COLUMNS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100),
    DATA_TYPE              VARCHAR(100),
    DERIVED_DATA_TYPE      VARCHAR(100),
    PRIMARY_KEY            BOOLEAN,
    TABLE_ID               INT NOT NULL REFERENCES TABLES(ID)
);

CREATE TABLE METRICS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100)
);

CREATE TABLE EXPRESSIONS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EXPRESSION             VARCHAR(500),
    METRIC_ID              INT NOT NULL REFERENCES METRICS(ID)
);

CREATE TABLE COLUMNS_EXPRESSIONS (
    COLUMN_ID              INT NOT NULL REFERENCES COLUMNS(ID),
    EXPRESSION_ID          INT NOT NULL REFERENCES EXPRESSIONS(ID),
    CONSTRAINT COLUMNS_EXPRESSIONS_PK PRIMARY KEY (COLUMN_ID, EXPRESSION_ID)
);

CREATE TABLE ATTRIBUTES (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100)
);

CREATE TABLE EXPRESSIONS_ATTRIBUTES (
    EXPRESSION_ID          INT NOT NULL REFERENCES EXPRESSIONS(ID),
    ATTRIBUTE_ID          INT NOT NULL REFERENCES ATTRIBUTES(ID),
    CONSTRAINT EXPRESSIONS_ATTRIBUTES_PK PRIMARY KEY (EXPRESSION_ID, ATTRIBUTE_ID)
);

CREATE TABLE TABLE_JOINTS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TABLE_LEFT             VARCHAR(100),
    TABLE_RIGHT            VARCHAR(100),
    JOIN_TYPE              VARCHAR(100),
    JOIN_EXPRESSION        VARCHAR(500)
);

CREATE TABLE REPORTS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100),
    DATASOURCE_ID          INT NOT NULL REFERENCES DATASOURCES(ID)
);

CREATE TABLE COMMENT_BLOCKS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    POSITION               INT NOT NULL,
    COMMENT                LONG VARCHAR,
    REPORT_ID              INT NOT NULL REFERENCES REPORTS(ID)
);

CREATE TABLE QUERY_BLOCKS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    POSITION               INT NOT NULL,
    NAME                   VARCHAR(100),
    REPORT_ID              INT NOT NULL REFERENCES REPORTS(ID)
);

CREATE TABLE REPORT_BLOCKS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME                   VARCHAR(100),
    REPORT_ID              INT NOT NULL REFERENCES REPORTS(ID)
);

CREATE TABLE FINAL_BLOCKS (
    ID                     INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    POSITION               INT NOT NULL,
    COMMANDS               LONG VARCHAR,
    REPORT_ID              INT NOT NULL REFERENCES REPORTS(ID)
);
